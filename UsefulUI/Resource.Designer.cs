//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UsefulUI {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UsefulUI.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A collection of useful UI that I have used or created for routine data display or entry in business apps. Some are mundane, others are more interesting.  The primary goal was to minimize xaml that would generally be repeated.  Many of the controls are consolidated controls that include a title to describe the data, an option to include an IsRequired Notification, a Label display of the data and the typical Xamarin control itself. 
        ///
        ///Calendar View - the most ambitious control.  Supports month and week views [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AboutInfo {
            get {
                return ResourceManager.GetString("AboutInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Useful UI.
        /// </summary>
        public static string AppTitle {
            get {
                return ResourceManager.GetString("AppTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CalendarBackground:Background color of entire calendar.
        ///CalendarDayFontSize:Size of Text on Calendar Day.
        ///CalendarDayPadding:Padding around Calendar day content.
        ///CloseOnSelect:bool, instructs control to close the month view on select date (single select only).
        ///DayOfWeekFontAttributes:FontAttributes for Day Of Week.
        ///DayOfWeekFontSize:Size of Day of Week (M, T, W, Th, ...)
        ///DefaultColor:Default text color of control.
        ///GridDim:Height of each Day cell in Week or month view.
        ///HideNonMonthDates:bool, instruc [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CalendarHelp {
            get {
                return ResourceManager.GetString("CalendarHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AllowFutureDate:sets the maxDate in DateTimePicker
        ///CanEdit:bool:switch between edit and readonly mode
        ///DateAndTimeMargin:Thickness, margin of Date picker.
        ///DateFormat:DateFormat
        ///DateTitle:string:title in edit mode
        ///ReadOnlyDateTimeFormat:Date format of date.
        ///ReadOnlyDateTimePlaceholder:string to display when SelectedDateTime is null
        ///ReadOnlyDateTimePlaceholderColor:text color of placeholder
        ///ReadOnlyDateTimeTextColor:text color of readonly datetime
        ///ReadOnlyTitle:string:title when readonly mode
        ///Selecte [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DateAndTimeHelp {
            get {
                return ResourceManager.GetString("DateAndTimeHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About: describe something..
        /// </summary>
        public static string EditorHelp {
            get {
                return ResourceManager.GetString("EditorHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AsPassword:bool, treat entry as password entry.
        ///BkgColor:Color, Background color of entire control.
        ///CanEdit:bool, toggle from readonly to edit mode.
        ///EntryMargin:Thickness, margin of entry control.
        ///KeyboardType:KeyboardType
        ///FieldLabel:string Entry Title.
        ///FieldValue:string, item bound to entry control.
        ///PlaceHolder:string Entry PlaceHolder.
        ///ReadOnlyPlaceholder:string, indicating entry text.
        ///ReadOnlyPlaceholderColor:Color of readonly placeholder string.
        ///ReadOnlyTextColor:Color of readonly text.
        ///Requi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string EntryHelp {
            get {
                return ResourceManager.GetString("EntryHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ButtonMargin:Margin around the button.
        ///ButtonCornerRadius:Corner Radius of control.
        ///ButtonWidthReques:How wide to make control.  Default is 150 px.
        ///ButtonText:Label text.
        ///ButtonAttributes:FontAttribute for ButtonText.
        ///ButtonBackground:Background color of control.
        ///ButtonTextMargin:Margin around text that is displayed in the control.
        ///ButtonLineBreakMode:LineBreakMode for text.
        ///ButtonIcon:Icon to display.  Default is FontAwesome check.
        ///ButtonIconFamily:Must be set, no default.
        ///ButtonIconColor:Color o [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LabelButtonHelp {
            get {
                return ResourceManager.GetString("LabelButtonHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About: Control that allows selection of multiple filters..
        /// </summary>
        public static string MultiFilterHelp {
            get {
                return ResourceManager.GetString("MultiFilterHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CanEdit:bool, toggle from read only to edit mode.
        ///FormatPhoneNumber:Func&lt;string,string&gt;, callback to format string for readonly display.
        ///PhoneTitle:string, Title of control.
        ///ReadOnlyPlaceHolder:string to display when no phone entered.
        ///ReadOnlyPlaceHolderColor:Color of placeholder.
        ///RequiredMessage:string, string that is displayed when required
        ///SelectedPhone:string, phone number no spaces or delimiters, 10 digits min.
        ///SelectedPhoneMargin:Thickness, margin of selected Phone field.
        ///ShowRequiredFlag:bool [rest of string was truncated]&quot;;.
        /// </summary>
        public static string PhoneEntryHelp {
            get {
                return ResourceManager.GetString("PhoneEntryHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CanEdit:bool, indicating if readonly or selection mode.
        ///DisplayMemberPath:string, property of object to display in picker.
        ///ItemsSource:Collection of items to display by picker.
        ///PickerLabel:string, used for Label over Picker.
        ///PickerLabelColor:Color, color of picker label text.
        ///PickerLabelFontSize:string, FontSize of PickerLabel.
        ///PickerPlaceholder:string, text to display when there is no selection.
        ///PickerPlaceholderColor:Color, color of PickerPlaceholder.
        ///PickerTitle:string, used by Picker when there  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string PickerHelp {
            get {
                return ResourceManager.GetString("PickerHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About:Control that allows for searching a list.
        /// </summary>
        public static string SearchHelp {
            get {
                return ResourceManager.GetString("SearchHelp", resourceCulture);
            }
        }
    }
}
